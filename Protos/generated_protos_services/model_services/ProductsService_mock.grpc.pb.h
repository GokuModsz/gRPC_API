// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: model_services/ProductsService.proto

#include "model_services/ProductsService.pb.h"
#include "model_services/ProductsService.grpc.pb.h"

#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/sync_stream.h>
#include <gmock/gmock.h>
namespace TestApiGrpc {
namespace Protos {
namespace models {

class MockProductsServiceStub : public ProductsService::StubInterface {
 public:
  MOCK_METHOD3(CreateProducts, ::grpc::Status(::grpc::ClientContext* context, const ::TestApiGrpc::Protos::models::Product& request, ::TestApiGrpc::Protos::models::ServiceStatus* response));
  MOCK_METHOD3(AsyncCreateProductsRaw, ::grpc::ClientAsyncResponseReaderInterface< ::TestApiGrpc::Protos::models::ServiceStatus>*(::grpc::ClientContext* context, const ::TestApiGrpc::Protos::models::Product& request, ::grpc::CompletionQueue* cq));
  MOCK_METHOD3(PrepareAsyncCreateProductsRaw, ::grpc::ClientAsyncResponseReaderInterface< ::TestApiGrpc::Protos::models::ServiceStatus>*(::grpc::ClientContext* context, const ::TestApiGrpc::Protos::models::Product& request, ::grpc::CompletionQueue* cq));
  MOCK_METHOD3(ListProducts, ::grpc::Status(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::TestApiGrpc::Protos::models::ListProductsResponse* response));
  MOCK_METHOD3(AsyncListProductsRaw, ::grpc::ClientAsyncResponseReaderInterface< ::TestApiGrpc::Protos::models::ListProductsResponse>*(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq));
  MOCK_METHOD3(PrepareAsyncListProductsRaw, ::grpc::ClientAsyncResponseReaderInterface< ::TestApiGrpc::Protos::models::ListProductsResponse>*(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq));
};

} // namespace TestApiGrpc
} // namespace Protos
} // namespace models

