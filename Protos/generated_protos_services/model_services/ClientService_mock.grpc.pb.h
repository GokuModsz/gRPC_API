// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: model_services/ClientService.proto

#include "model_services/ClientService.pb.h"
#include "model_services/ClientService.grpc.pb.h"

#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/sync_stream.h>
#include <gmock/gmock.h>
namespace TestApiGrpc {
namespace Protos {
namespace models {

class MockClientServiceStub : public ClientService::StubInterface {
 public:
  MOCK_METHOD3(CreateClient, ::grpc::Status(::grpc::ClientContext* context, const ::TestApiGrpc::Protos::models::Client& request, ::TestApiGrpc::Protos::models::ServiceStatus* response));
  MOCK_METHOD3(AsyncCreateClientRaw, ::grpc::ClientAsyncResponseReaderInterface< ::TestApiGrpc::Protos::models::ServiceStatus>*(::grpc::ClientContext* context, const ::TestApiGrpc::Protos::models::Client& request, ::grpc::CompletionQueue* cq));
  MOCK_METHOD3(PrepareAsyncCreateClientRaw, ::grpc::ClientAsyncResponseReaderInterface< ::TestApiGrpc::Protos::models::ServiceStatus>*(::grpc::ClientContext* context, const ::TestApiGrpc::Protos::models::Client& request, ::grpc::CompletionQueue* cq));
  MOCK_METHOD3(ListClient, ::grpc::Status(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::TestApiGrpc::Protos::models::ListClientResponse* response));
  MOCK_METHOD3(AsyncListClientRaw, ::grpc::ClientAsyncResponseReaderInterface< ::TestApiGrpc::Protos::models::ListClientResponse>*(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq));
  MOCK_METHOD3(PrepareAsyncListClientRaw, ::grpc::ClientAsyncResponseReaderInterface< ::TestApiGrpc::Protos::models::ListClientResponse>*(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq));
};

} // namespace TestApiGrpc
} // namespace Protos
} // namespace models

