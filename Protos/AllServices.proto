// Todos los Servicios a usar del Servidor.
syntax = "proto3";

// Importar google.protobuf.empty.
import "google/protobuf/empty.proto";

//Importar los Atributos de cada .proto
import "Client_Register.proto";
import "Client_Product.proto";
import "Client_Facture.proto";
import "Client_Invoice.proto";

package TEST_API_GRPC;

// Metodo para estado del Servidor.
message ServiceStatus
{
  bool   is_success    = 1;
  string error_message = 2;
}

// Servicios de Todos los .protos
// Servicio ClientService.
service ClientService
{
  rpc CreateClient(Client) returns (ClienteId) { }
  rpc ReadClient(ClientId) returns (Client) { }
  rpc UpdateClient(ClientId) returns (Client) { }
  rpc DeletedClient(ClientId) returns (ClientId) { }
}

// Servicio ProductService.
service ProductService
{
  rpc CreateProduct(ClientProduct) returns (ProductId) { }
  rpc ReadProduct(ProductId) returns (Product) { }
  rpc UpdateProduct(ProductId) returns (Product) { }
  rpc DeletedProduct(ProductId) returns (ProductId) { }
}

// Servicio InvoiceService.
service InvoiceService
{
  rpc CreateInvoice(ClientInvoice) returns (InvoiceId) { }
  rpc ReadInvoice(InvoiceId) returns (Invoice) { }
  rpc UpdateInvoice(InvoiceId) returns (Invoice) { }
  rpc DeletedInvoice(InvoiceId) returns (InvoiceId) { }
}

// Servicio FactureService.
service FactureService
{
  rpc CreateFacture(ClientFacture) returns (FactureId) { }
  rpc ReadFacture(FactureId) returns (Facture) { }
  rpc UpdateFacture(FactureId) returns (Facture) { }
  rpc DeletedFacture(FactureId) returns (FactureId) { }
}