// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: models/InvoiceDetails.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_models_2fInvoiceDetails_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_models_2fInvoiceDetails_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "models/Products.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_models_2fInvoiceDetails_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_models_2fInvoiceDetails_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_models_2fInvoiceDetails_2eproto;
namespace TestApiGrpc {
namespace Protos {
namespace models {
class InvoiceDetails;
struct InvoiceDetailsDefaultTypeInternal;
extern InvoiceDetailsDefaultTypeInternal _InvoiceDetails_default_instance_;
}  // namespace models
}  // namespace Protos
}  // namespace TestApiGrpc
PROTOBUF_NAMESPACE_OPEN
template<> ::TestApiGrpc::Protos::models::InvoiceDetails* Arena::CreateMaybeMessage<::TestApiGrpc::Protos::models::InvoiceDetails>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace TestApiGrpc {
namespace Protos {
namespace models {

// ===================================================================

class InvoiceDetails final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TestApiGrpc.Protos.models.InvoiceDetails) */ {
 public:
  inline InvoiceDetails() : InvoiceDetails(nullptr) {}
  ~InvoiceDetails() override;
  explicit PROTOBUF_CONSTEXPR InvoiceDetails(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  InvoiceDetails(const InvoiceDetails& from);
  InvoiceDetails(InvoiceDetails&& from) noexcept
    : InvoiceDetails() {
    *this = ::std::move(from);
  }

  inline InvoiceDetails& operator=(const InvoiceDetails& from) {
    CopyFrom(from);
    return *this;
  }
  inline InvoiceDetails& operator=(InvoiceDetails&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InvoiceDetails& default_instance() {
    return *internal_default_instance();
  }
  static inline const InvoiceDetails* internal_default_instance() {
    return reinterpret_cast<const InvoiceDetails*>(
               &_InvoiceDetails_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(InvoiceDetails& a, InvoiceDetails& b) {
    a.Swap(&b);
  }
  inline void Swap(InvoiceDetails* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InvoiceDetails* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InvoiceDetails* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<InvoiceDetails>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const InvoiceDetails& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const InvoiceDetails& from) {
    InvoiceDetails::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InvoiceDetails* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TestApiGrpc.Protos.models.InvoiceDetails";
  }
  protected:
  explicit InvoiceDetails(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInvoiceDetailsFieldNumber = 5,
    kNameInvoiceFieldNumber = 2,
    kDirInvoiceFieldNumber = 3,
    kRefProductFieldNumber = 4,
    kIdInvoiceFieldNumber = 1,
  };
  // repeated string invoice_details = 5;
  int invoice_details_size() const;
  private:
  int _internal_invoice_details_size() const;
  public:
  void clear_invoice_details();
  const std::string& invoice_details(int index) const;
  std::string* mutable_invoice_details(int index);
  void set_invoice_details(int index, const std::string& value);
  void set_invoice_details(int index, std::string&& value);
  void set_invoice_details(int index, const char* value);
  void set_invoice_details(int index, const char* value, size_t size);
  std::string* add_invoice_details();
  void add_invoice_details(const std::string& value);
  void add_invoice_details(std::string&& value);
  void add_invoice_details(const char* value);
  void add_invoice_details(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& invoice_details() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_invoice_details();
  private:
  const std::string& _internal_invoice_details(int index) const;
  std::string* _internal_add_invoice_details();
  public:

  // string name_invoice = 2;
  void clear_name_invoice();
  const std::string& name_invoice() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name_invoice(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name_invoice();
  PROTOBUF_NODISCARD std::string* release_name_invoice();
  void set_allocated_name_invoice(std::string* name_invoice);
  private:
  const std::string& _internal_name_invoice() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name_invoice(const std::string& value);
  std::string* _internal_mutable_name_invoice();
  public:

  // string dir_invoice = 3;
  void clear_dir_invoice();
  const std::string& dir_invoice() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_dir_invoice(ArgT0&& arg0, ArgT... args);
  std::string* mutable_dir_invoice();
  PROTOBUF_NODISCARD std::string* release_dir_invoice();
  void set_allocated_dir_invoice(std::string* dir_invoice);
  private:
  const std::string& _internal_dir_invoice() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_dir_invoice(const std::string& value);
  std::string* _internal_mutable_dir_invoice();
  public:

  // .TestApiGrpc.Protos.models.Product ref_product = 4;
  bool has_ref_product() const;
  private:
  bool _internal_has_ref_product() const;
  public:
  void clear_ref_product();
  const ::TestApiGrpc::Protos::models::Product& ref_product() const;
  PROTOBUF_NODISCARD ::TestApiGrpc::Protos::models::Product* release_ref_product();
  ::TestApiGrpc::Protos::models::Product* mutable_ref_product();
  void set_allocated_ref_product(::TestApiGrpc::Protos::models::Product* ref_product);
  private:
  const ::TestApiGrpc::Protos::models::Product& _internal_ref_product() const;
  ::TestApiGrpc::Protos::models::Product* _internal_mutable_ref_product();
  public:
  void unsafe_arena_set_allocated_ref_product(
      ::TestApiGrpc::Protos::models::Product* ref_product);
  ::TestApiGrpc::Protos::models::Product* unsafe_arena_release_ref_product();

  // uint32 id_invoice = 1;
  void clear_id_invoice();
  uint32_t id_invoice() const;
  void set_id_invoice(uint32_t value);
  private:
  uint32_t _internal_id_invoice() const;
  void _internal_set_id_invoice(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:TestApiGrpc.Protos.models.InvoiceDetails)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> invoice_details_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_invoice_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr dir_invoice_;
    ::TestApiGrpc::Protos::models::Product* ref_product_;
    uint32_t id_invoice_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_models_2fInvoiceDetails_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// InvoiceDetails

// uint32 id_invoice = 1;
inline void InvoiceDetails::clear_id_invoice() {
  _impl_.id_invoice_ = 0u;
}
inline uint32_t InvoiceDetails::_internal_id_invoice() const {
  return _impl_.id_invoice_;
}
inline uint32_t InvoiceDetails::id_invoice() const {
  // @@protoc_insertion_point(field_get:TestApiGrpc.Protos.models.InvoiceDetails.id_invoice)
  return _internal_id_invoice();
}
inline void InvoiceDetails::_internal_set_id_invoice(uint32_t value) {
  
  _impl_.id_invoice_ = value;
}
inline void InvoiceDetails::set_id_invoice(uint32_t value) {
  _internal_set_id_invoice(value);
  // @@protoc_insertion_point(field_set:TestApiGrpc.Protos.models.InvoiceDetails.id_invoice)
}

// string name_invoice = 2;
inline void InvoiceDetails::clear_name_invoice() {
  _impl_.name_invoice_.ClearToEmpty();
}
inline const std::string& InvoiceDetails::name_invoice() const {
  // @@protoc_insertion_point(field_get:TestApiGrpc.Protos.models.InvoiceDetails.name_invoice)
  return _internal_name_invoice();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void InvoiceDetails::set_name_invoice(ArgT0&& arg0, ArgT... args) {
 
 _impl_.name_invoice_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:TestApiGrpc.Protos.models.InvoiceDetails.name_invoice)
}
inline std::string* InvoiceDetails::mutable_name_invoice() {
  std::string* _s = _internal_mutable_name_invoice();
  // @@protoc_insertion_point(field_mutable:TestApiGrpc.Protos.models.InvoiceDetails.name_invoice)
  return _s;
}
inline const std::string& InvoiceDetails::_internal_name_invoice() const {
  return _impl_.name_invoice_.Get();
}
inline void InvoiceDetails::_internal_set_name_invoice(const std::string& value) {
  
  _impl_.name_invoice_.Set(value, GetArenaForAllocation());
}
inline std::string* InvoiceDetails::_internal_mutable_name_invoice() {
  
  return _impl_.name_invoice_.Mutable(GetArenaForAllocation());
}
inline std::string* InvoiceDetails::release_name_invoice() {
  // @@protoc_insertion_point(field_release:TestApiGrpc.Protos.models.InvoiceDetails.name_invoice)
  return _impl_.name_invoice_.Release();
}
inline void InvoiceDetails::set_allocated_name_invoice(std::string* name_invoice) {
  if (name_invoice != nullptr) {
    
  } else {
    
  }
  _impl_.name_invoice_.SetAllocated(name_invoice, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.name_invoice_.IsDefault()) {
    _impl_.name_invoice_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:TestApiGrpc.Protos.models.InvoiceDetails.name_invoice)
}

// string dir_invoice = 3;
inline void InvoiceDetails::clear_dir_invoice() {
  _impl_.dir_invoice_.ClearToEmpty();
}
inline const std::string& InvoiceDetails::dir_invoice() const {
  // @@protoc_insertion_point(field_get:TestApiGrpc.Protos.models.InvoiceDetails.dir_invoice)
  return _internal_dir_invoice();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void InvoiceDetails::set_dir_invoice(ArgT0&& arg0, ArgT... args) {
 
 _impl_.dir_invoice_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:TestApiGrpc.Protos.models.InvoiceDetails.dir_invoice)
}
inline std::string* InvoiceDetails::mutable_dir_invoice() {
  std::string* _s = _internal_mutable_dir_invoice();
  // @@protoc_insertion_point(field_mutable:TestApiGrpc.Protos.models.InvoiceDetails.dir_invoice)
  return _s;
}
inline const std::string& InvoiceDetails::_internal_dir_invoice() const {
  return _impl_.dir_invoice_.Get();
}
inline void InvoiceDetails::_internal_set_dir_invoice(const std::string& value) {
  
  _impl_.dir_invoice_.Set(value, GetArenaForAllocation());
}
inline std::string* InvoiceDetails::_internal_mutable_dir_invoice() {
  
  return _impl_.dir_invoice_.Mutable(GetArenaForAllocation());
}
inline std::string* InvoiceDetails::release_dir_invoice() {
  // @@protoc_insertion_point(field_release:TestApiGrpc.Protos.models.InvoiceDetails.dir_invoice)
  return _impl_.dir_invoice_.Release();
}
inline void InvoiceDetails::set_allocated_dir_invoice(std::string* dir_invoice) {
  if (dir_invoice != nullptr) {
    
  } else {
    
  }
  _impl_.dir_invoice_.SetAllocated(dir_invoice, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.dir_invoice_.IsDefault()) {
    _impl_.dir_invoice_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:TestApiGrpc.Protos.models.InvoiceDetails.dir_invoice)
}

// .TestApiGrpc.Protos.models.Product ref_product = 4;
inline bool InvoiceDetails::_internal_has_ref_product() const {
  return this != internal_default_instance() && _impl_.ref_product_ != nullptr;
}
inline bool InvoiceDetails::has_ref_product() const {
  return _internal_has_ref_product();
}
inline const ::TestApiGrpc::Protos::models::Product& InvoiceDetails::_internal_ref_product() const {
  const ::TestApiGrpc::Protos::models::Product* p = _impl_.ref_product_;
  return p != nullptr ? *p : reinterpret_cast<const ::TestApiGrpc::Protos::models::Product&>(
      ::TestApiGrpc::Protos::models::_Product_default_instance_);
}
inline const ::TestApiGrpc::Protos::models::Product& InvoiceDetails::ref_product() const {
  // @@protoc_insertion_point(field_get:TestApiGrpc.Protos.models.InvoiceDetails.ref_product)
  return _internal_ref_product();
}
inline void InvoiceDetails::unsafe_arena_set_allocated_ref_product(
    ::TestApiGrpc::Protos::models::Product* ref_product) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.ref_product_);
  }
  _impl_.ref_product_ = ref_product;
  if (ref_product) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TestApiGrpc.Protos.models.InvoiceDetails.ref_product)
}
inline ::TestApiGrpc::Protos::models::Product* InvoiceDetails::release_ref_product() {
  
  ::TestApiGrpc::Protos::models::Product* temp = _impl_.ref_product_;
  _impl_.ref_product_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::TestApiGrpc::Protos::models::Product* InvoiceDetails::unsafe_arena_release_ref_product() {
  // @@protoc_insertion_point(field_release:TestApiGrpc.Protos.models.InvoiceDetails.ref_product)
  
  ::TestApiGrpc::Protos::models::Product* temp = _impl_.ref_product_;
  _impl_.ref_product_ = nullptr;
  return temp;
}
inline ::TestApiGrpc::Protos::models::Product* InvoiceDetails::_internal_mutable_ref_product() {
  
  if (_impl_.ref_product_ == nullptr) {
    auto* p = CreateMaybeMessage<::TestApiGrpc::Protos::models::Product>(GetArenaForAllocation());
    _impl_.ref_product_ = p;
  }
  return _impl_.ref_product_;
}
inline ::TestApiGrpc::Protos::models::Product* InvoiceDetails::mutable_ref_product() {
  ::TestApiGrpc::Protos::models::Product* _msg = _internal_mutable_ref_product();
  // @@protoc_insertion_point(field_mutable:TestApiGrpc.Protos.models.InvoiceDetails.ref_product)
  return _msg;
}
inline void InvoiceDetails::set_allocated_ref_product(::TestApiGrpc::Protos::models::Product* ref_product) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.ref_product_);
  }
  if (ref_product) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(ref_product));
    if (message_arena != submessage_arena) {
      ref_product = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ref_product, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.ref_product_ = ref_product;
  // @@protoc_insertion_point(field_set_allocated:TestApiGrpc.Protos.models.InvoiceDetails.ref_product)
}

// repeated string invoice_details = 5;
inline int InvoiceDetails::_internal_invoice_details_size() const {
  return _impl_.invoice_details_.size();
}
inline int InvoiceDetails::invoice_details_size() const {
  return _internal_invoice_details_size();
}
inline void InvoiceDetails::clear_invoice_details() {
  _impl_.invoice_details_.Clear();
}
inline std::string* InvoiceDetails::add_invoice_details() {
  std::string* _s = _internal_add_invoice_details();
  // @@protoc_insertion_point(field_add_mutable:TestApiGrpc.Protos.models.InvoiceDetails.invoice_details)
  return _s;
}
inline const std::string& InvoiceDetails::_internal_invoice_details(int index) const {
  return _impl_.invoice_details_.Get(index);
}
inline const std::string& InvoiceDetails::invoice_details(int index) const {
  // @@protoc_insertion_point(field_get:TestApiGrpc.Protos.models.InvoiceDetails.invoice_details)
  return _internal_invoice_details(index);
}
inline std::string* InvoiceDetails::mutable_invoice_details(int index) {
  // @@protoc_insertion_point(field_mutable:TestApiGrpc.Protos.models.InvoiceDetails.invoice_details)
  return _impl_.invoice_details_.Mutable(index);
}
inline void InvoiceDetails::set_invoice_details(int index, const std::string& value) {
  _impl_.invoice_details_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:TestApiGrpc.Protos.models.InvoiceDetails.invoice_details)
}
inline void InvoiceDetails::set_invoice_details(int index, std::string&& value) {
  _impl_.invoice_details_.Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:TestApiGrpc.Protos.models.InvoiceDetails.invoice_details)
}
inline void InvoiceDetails::set_invoice_details(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _impl_.invoice_details_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:TestApiGrpc.Protos.models.InvoiceDetails.invoice_details)
}
inline void InvoiceDetails::set_invoice_details(int index, const char* value, size_t size) {
  _impl_.invoice_details_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TestApiGrpc.Protos.models.InvoiceDetails.invoice_details)
}
inline std::string* InvoiceDetails::_internal_add_invoice_details() {
  return _impl_.invoice_details_.Add();
}
inline void InvoiceDetails::add_invoice_details(const std::string& value) {
  _impl_.invoice_details_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:TestApiGrpc.Protos.models.InvoiceDetails.invoice_details)
}
inline void InvoiceDetails::add_invoice_details(std::string&& value) {
  _impl_.invoice_details_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:TestApiGrpc.Protos.models.InvoiceDetails.invoice_details)
}
inline void InvoiceDetails::add_invoice_details(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _impl_.invoice_details_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:TestApiGrpc.Protos.models.InvoiceDetails.invoice_details)
}
inline void InvoiceDetails::add_invoice_details(const char* value, size_t size) {
  _impl_.invoice_details_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:TestApiGrpc.Protos.models.InvoiceDetails.invoice_details)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
InvoiceDetails::invoice_details() const {
  // @@protoc_insertion_point(field_list:TestApiGrpc.Protos.models.InvoiceDetails.invoice_details)
  return _impl_.invoice_details_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
InvoiceDetails::mutable_invoice_details() {
  // @@protoc_insertion_point(field_mutable_list:TestApiGrpc.Protos.models.InvoiceDetails.invoice_details)
  return &_impl_.invoice_details_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace models
}  // namespace Protos
}  // namespace TestApiGrpc

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_models_2fInvoiceDetails_2eproto
